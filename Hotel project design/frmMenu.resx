<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button7.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4v/YhkdrfQg5NwAAAABJRU5ErkJggg==
</value>
  </data>
</root>